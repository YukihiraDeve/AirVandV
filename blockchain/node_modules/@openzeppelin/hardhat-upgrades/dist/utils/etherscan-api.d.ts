import { HardhatRuntimeEnvironment } from 'hardhat/types';
import { Etherscan } from '@nomicfoundation/hardhat-verify/etherscan';
/**
 * Call the configured Etherscan API with the given parameters.
 *
 * @param etherscan Etherscan instance
 * @param params The API parameters to call with
 * @returns The Etherscan API response
 */
export declare function callEtherscanApi(etherscan: Etherscan, params: any): Promise<EtherscanResponseBody>;
/**
 * Gets an Etherscan instance based on Hardhat config.
 * Throws an error if Etherscan API key is not present in config.
 */
export declare function getEtherscanInstance(hre: HardhatRuntimeEnvironment): Promise<Etherscan>;
/**
 * The response body from an Etherscan API call.
 */
interface EtherscanResponseBody {
    status: string;
    message: string;
    result: any;
}
export declare const RESPONSE_OK = "1";
export declare function verifyAndGetStatus(params: {
    contractAddress: string;
    sourceCode: string;
    contractName: string;
    compilerVersion: string;
    constructorArguments: string;
}, etherscan: Etherscan): Promise<{
    readonly status: number;
    readonly message: string;
    isPending(): boolean;
    isFailure(): boolean;
    isSuccess(): boolean;
    isBytecodeMissingInNetworkError(): boolean;
    isOk(): boolean;
}>;
export {};
//# sourceMappingURL=etherscan-api.d.ts.map